<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="praktikaDataSet1" targetNamespace="http://tempuri.org/praktikaDataSet1.xsd" xmlns:mstns="http://tempuri.org/praktikaDataSet1.xsd" xmlns="http://tempuri.org/praktikaDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="praktikaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="praktikaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PRAKTIKA5.Properties.Settings.GlobalReference.Default.praktikaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="БанкTableAdapter" GeneratorDataComponentClassName="БанкTableAdapter" Name="Банк" UserDataComponentName="БанкTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="praktika.dbo.bank" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[bank] WHERE (([bank_id] = @Original_bank_id) AND ([bank_name] = @Original_bank_name) AND ([account_num] = @Original_account_num))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bank_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bank_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bank_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_account_num" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="account_num" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[bank] ([bank_name], [account_num]) VALUES (@bank_name, @account_num);
SELECT bank_id, bank_name, account_num FROM bank WHERE (bank_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bank_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bank_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@account_num" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="account_num" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT bank_id, bank_name, account_num FROM dbo.bank</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[bank] SET [bank_name] = @bank_name, [account_num] = @account_num WHERE (([bank_id] = @Original_bank_id) AND ([bank_name] = @Original_bank_name) AND ([account_num] = @Original_account_num));
SELECT bank_id, bank_name, account_num FROM bank WHERE (bank_id = @bank_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bank_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bank_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@account_num" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="account_num" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bank_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bank_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bank_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_account_num" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="account_num" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="bank_id" ColumnName="bank_id" DataSourceName="praktika.dbo.bank" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@bank_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="bank_id" DataSetColumn="ID" />
              <Mapping SourceColumn="bank_name" DataSetColumn="Название" />
              <Mapping SourceColumn="account_num" DataSetColumn="Номер счета" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[bank] WHERE ([bank_id] = @Original_bank_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_bank_id" ColumnName="bank_id" DataSourceName="praktika.dbo.bank" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_bank_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[bank] ([bank_name], [account_num]) VALUES (@bank_name, @account_num);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bank_name" ColumnName="bank_name" DataSourceName="praktika.dbo.bank" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@bank_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="bank_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="account_num" ColumnName="account_num" DataSourceName="praktika.dbo.bank" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@account_num" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="account_num" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[bank] SET [bank_name] = @bank_name, [account_num] = @account_num WHERE ([bank_id] = @Original_bank_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bank_name" ColumnName="bank_name" DataSourceName="praktika.dbo.bank" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@bank_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="bank_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="account_num" ColumnName="account_num" DataSourceName="praktika.dbo.bank" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@account_num" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="account_num" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_bank_id" ColumnName="bank_id" DataSourceName="praktika.dbo.bank" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_bank_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ЧекTableAdapter" GeneratorDataComponentClassName="ЧекTableAdapter" Name="Чек" UserDataComponentName="ЧекTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT cheque.cheque_id, users.first_name, payment.comission_id, product.product_name
FROM     cheque LEFT OUTER JOIN
                  users ON users.users_id = cheque.users_id LEFT OUTER JOIN
                  payment ON payment.payment_id = cheque.payment_id LEFT OUTER JOIN
                  product ON product.product_id = cheque.product_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="cheque_id" DataSetColumn="ID" />
              <Mapping SourceColumn="first_name" DataSetColumn="Покупатель" />
              <Mapping SourceColumn="comission_id" DataSetColumn="Комиссия" />
              <Mapping SourceColumn="product_name" DataSetColumn="Товар" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[cheque] WHERE ([cheque_id] = @Original_cheque_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_cheque_id" ColumnName="cheque_id" DataSourceName="praktika.dbo.cheque" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_cheque_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="cheque_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[cheque] ([users_id], [payment_id], [product_id]) VALUES (@users_id, @payment_id, @product_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="users_id" ColumnName="users_id" DataSourceName="praktika.dbo.cheque" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@users_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="users_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payment_id" ColumnName="payment_id" DataSourceName="praktika.dbo.cheque" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payment_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="product_id" ColumnName="product_id" DataSourceName="praktika.dbo.cheque" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@product_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="product_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="КомиссияTableAdapter" GeneratorDataComponentClassName="КомиссияTableAdapter" Name="Комиссия" UserDataComponentName="КомиссияTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT comission.comission_id, comission.comission, payment_method.payment_method_name
FROM     comission LEFT OUTER JOIN
                  payment_method ON payment_method.payment_method_id = comission.payment_method_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="comission_id" DataSetColumn="ID" />
              <Mapping SourceColumn="comission" DataSetColumn="Комиссия" />
              <Mapping SourceColumn="payment_method_name" DataSetColumn="Способ оплаты" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[comission] WHERE ([comission_id] = @Original_comission_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_comission_id" ColumnName="comission_id" DataSourceName="praktika.dbo.comission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_comission_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="comission_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[comission] ([comission], [payment_method_id]) VALUES (@comission, @payment_method_id);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="comission" ColumnName="comission" DataSourceName="praktika.dbo.comission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@comission" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="comission" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payment_method_id" ColumnName="payment_method_id" DataSourceName="praktika.dbo.comission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[comission] SET [comission] = @comission, [payment_method_id] = @payment_method_id WHERE ([comission_id] = @Original_comission_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="comission" ColumnName="comission" DataSourceName="praktika.dbo.comission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@comission" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="comission" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payment_method_id" ColumnName="payment_method_id" DataSourceName="praktika.dbo.comission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_comission_id" ColumnName="comission_id" DataSourceName="praktika.dbo.comission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_comission_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="comission_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Входные_данныеTableAdapter" GeneratorDataComponentClassName="Входные_данныеTableAdapter" Name="Входные_данные" UserDataComponentName="Входные_данныеTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="praktika.dbo.data_in" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[data_in] WHERE (([data_in_id] = @Original_data_in_id) AND ([data_in_login] = @Original_data_in_login) AND ([data_in_password] = @Original_data_in_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_data_in_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_data_in_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[data_in] ([data_in_login], [data_in_password]) VALUES (@data_in_login, @data_in_password);
SELECT data_in_id, data_in_login, data_in_password FROM data_in WHERE (data_in_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@data_in_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@data_in_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT data_in_id, data_in_login, data_in_password FROM dbo.data_in</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[data_in] SET [data_in_login] = @data_in_login, [data_in_password] = @data_in_password WHERE (([data_in_id] = @Original_data_in_id) AND ([data_in_login] = @Original_data_in_login) AND ([data_in_password] = @Original_data_in_password));
SELECT data_in_id, data_in_login, data_in_password FROM data_in WHERE (data_in_id = @data_in_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@data_in_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@data_in_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_data_in_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_data_in_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="data_in_password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="data_in_id" ColumnName="data_in_id" DataSourceName="praktika.dbo.data_in" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="data_in_id" DataSetColumn="ID" />
              <Mapping SourceColumn="data_in_login" DataSetColumn="Логин" />
              <Mapping SourceColumn="data_in_password" DataSetColumn="Пароль" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[data_in] WHERE ([data_in_id] = @Original_data_in_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_data_in_id" ColumnName="data_in_id" DataSourceName="praktika.dbo.data_in" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[data_in] ([data_in_login], [data_in_password]) VALUES (@data_in_login, @data_in_password);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="data_in_login" ColumnName="data_in_login" DataSourceName="praktika.dbo.data_in" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@data_in_login" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="data_in_login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="data_in_password" ColumnName="data_in_password" DataSourceName="praktika.dbo.data_in" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@data_in_password" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="data_in_password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[data_in] SET [data_in_login] = @data_in_login, [data_in_password] = @data_in_password WHERE ([data_in_id] = @Original_data_in_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="data_in_login" ColumnName="data_in_login" DataSourceName="praktika.dbo.data_in" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@data_in_login" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="data_in_login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="data_in_password" ColumnName="data_in_password" DataSourceName="praktika.dbo.data_in" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@data_in_password" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="data_in_password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_data_in_id" ColumnName="data_in_id" DataSourceName="praktika.dbo.data_in" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ОплатаTableAdapter" GeneratorDataComponentClassName="ОплатаTableAdapter" Name="Оплата" UserDataComponentName="ОплатаTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT payment.payment_id, bank.bank_name, comission.comission
FROM     payment LEFT OUTER JOIN
                  bank ON bank.bank_id = payment.bank_id LEFT OUTER JOIN
                  comission ON comission.comission_id = payment.comission_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="payment_id" DataSetColumn="ID" />
              <Mapping SourceColumn="bank_name" DataSetColumn="Банк" />
              <Mapping SourceColumn="comission" DataSetColumn="Комиссия" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[payment] WHERE ([payment_id] = @Original_payment_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_payment_id" ColumnName="payment_id" DataSourceName="praktika.dbo.payment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_payment_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[payment] ([bank_id], [comission_id]) VALUES (@bank_id, @comission_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bank_id" ColumnName="bank_id" DataSourceName="praktika.dbo.payment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@bank_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="comission_id" ColumnName="comission_id" DataSourceName="praktika.dbo.payment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@comission_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="comission_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[payment] SET [bank_id] = @bank_id, [comission_id] = @comission_id WHERE ([payment_id] = @Original_payment_id) 
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bank_id" ColumnName="bank_id" DataSourceName="praktika.dbo.payment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@bank_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="bank_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="comission_id" ColumnName="comission_id" DataSourceName="praktika.dbo.payment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@comission_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="comission_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_payment_id" ColumnName="payment_id" DataSourceName="praktika.dbo.payment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_payment_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Способ_оплатыTableAdapter" GeneratorDataComponentClassName="Способ_оплатыTableAdapter" Name="Способ_оплаты" UserDataComponentName="Способ_оплатыTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="praktika.dbo.payment_method" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[payment_method] WHERE (([payment_method_id] = @Original_payment_method_id) AND ([payment_method_name] = @Original_payment_method_name) AND ([requisites] = @Original_requisites))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_payment_method_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="payment_method_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[payment_method] ([payment_method_name], [requisites]) VALUES (@payment_method_name, @requisites);
SELECT payment_method_id, payment_method_name, requisites FROM payment_method WHERE (payment_method_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@payment_method_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="payment_method_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT payment_method_id, payment_method_name, requisites FROM dbo.payment_method</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[payment_method] SET [payment_method_name] = @payment_method_name, [requisites] = @requisites WHERE (([payment_method_id] = @Original_payment_method_id) AND ([payment_method_name] = @Original_payment_method_name) AND ([requisites] = @Original_requisites));
SELECT payment_method_id, payment_method_name, requisites FROM payment_method WHERE (payment_method_id = @payment_method_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@payment_method_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="payment_method_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_payment_method_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="payment_method_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payment_method_id" ColumnName="payment_method_id" DataSourceName="praktika.dbo.payment_method" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="payment_method_id" DataSetColumn="ID" />
              <Mapping SourceColumn="payment_method_name" DataSetColumn="Название" />
              <Mapping SourceColumn="requisites" DataSetColumn="Реквизиты" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[payment_method] WHERE ([payment_method_id] = @Original_payment_method_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_payment_method_id" ColumnName="payment_method_id" DataSourceName="praktika.dbo.payment_method" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[payment_method] ([payment_method_name], [requisites]) VALUES (@payment_method_name, @requisites);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="payment_method_name" ColumnName="payment_method_name" DataSourceName="praktika.dbo.payment_method" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@payment_method_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="payment_method_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="requisites" ColumnName="requisites" DataSourceName="praktika.dbo.payment_method" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[payment_method] SET [payment_method_name] = @payment_method_name, [requisites] = @requisites WHERE ([payment_method_id] = @Original_payment_method_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="payment_method_name" ColumnName="payment_method_name" DataSourceName="praktika.dbo.payment_method" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@payment_method_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="payment_method_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="requisites" ColumnName="requisites" DataSourceName="praktika.dbo.payment_method" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_payment_method_id" ColumnName="payment_method_id" DataSourceName="praktika.dbo.payment_method" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_payment_method_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="payment_method_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ЦенаTableAdapter" GeneratorDataComponentClassName="ЦенаTableAdapter" Name="Цена" UserDataComponentName="ЦенаTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="praktika.dbo.price" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[price] WHERE (([price_id] = @Original_price_id) AND ([summ] = @Original_summ) AND ([tax] = @Original_tax))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_price_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_summ" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="summ" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tax" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tax" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[price] ([summ], [tax]) VALUES (@summ, @tax);
SELECT price_id, summ, tax FROM price WHERE (price_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@summ" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="summ" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tax" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tax" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT price_id, summ, tax FROM dbo.price</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[price] SET [summ] = @summ, [tax] = @tax WHERE (([price_id] = @Original_price_id) AND ([summ] = @Original_summ) AND ([tax] = @Original_tax));
SELECT price_id, summ, tax FROM price WHERE (price_id = @price_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@summ" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="summ" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tax" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tax" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_price_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_summ" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="summ" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tax" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tax" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="price_id" ColumnName="price_id" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@price_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="price_id" DataSetColumn="ID" />
              <Mapping SourceColumn="summ" DataSetColumn="Сумма" />
              <Mapping SourceColumn="tax" DataSetColumn="Налог" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[price] WHERE ([price_id] = @Original_price_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_price_id" ColumnName="price_id" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_price_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[price] ([summ], [tax]) VALUES (@summ, @tax);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="summ" ColumnName="summ" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@summ" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="summ" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tax" ColumnName="tax" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tax" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tax" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[price] SET [summ] = @summ, [tax] = @tax WHERE ([price_id] = @Original_price_id) </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="summ" ColumnName="summ" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@summ" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="summ" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tax" ColumnName="tax" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tax" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tax" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_price_id" ColumnName="price_id" DataSourceName="praktika.dbo.price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_price_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ПроизводительTableAdapter" GeneratorDataComponentClassName="ПроизводительTableAdapter" Name="Производитель" UserDataComponentName="ПроизводительTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="praktika.dbo.producer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[producer] WHERE (([producer_id] = @Original_producer_id) AND ([seller] = @Original_seller) AND ([country] = @Original_country) AND ([requisites] = @Original_requisites))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_producer_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_seller" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="seller" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[producer] ([seller], [country], [requisites]) VALUES (@seller, @country, @requisites);
SELECT producer_id, seller, country, requisites FROM producer WHERE (producer_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@seller" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="seller" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT producer_id, seller, country, requisites FROM dbo.producer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[producer] SET [seller] = @seller, [country] = @country, [requisites] = @requisites WHERE (([producer_id] = @Original_producer_id) AND ([seller] = @Original_seller) AND ([country] = @Original_country) AND ([requisites] = @Original_requisites));
SELECT producer_id, seller, country, requisites FROM producer WHERE (producer_id = @producer_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@seller" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="seller" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_producer_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_seller" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="seller" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_country" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="producer_id" ColumnName="producer_id" DataSourceName="praktika.dbo.producer" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@producer_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="producer_id" DataSetColumn="ID" />
              <Mapping SourceColumn="seller" DataSetColumn="Продавец" />
              <Mapping SourceColumn="country" DataSetColumn="Страна" />
              <Mapping SourceColumn="requisites" DataSetColumn="Реквизиты" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[producer] WHERE ([producer_id] = @Original_producer_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_producer_id" ColumnName="producer_id" DataSourceName="praktika.dbo.producer" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_producer_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[producer] ([seller], [country], [requisites]) VALUES (@seller, @country, @requisites);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="seller" ColumnName="seller" DataSourceName="praktika.dbo.producer" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@seller" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="seller" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="country" ColumnName="country" DataSourceName="praktika.dbo.producer" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="requisites" ColumnName="requisites" DataSourceName="praktika.dbo.producer" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[producer] SET [seller] = @seller, [country] = @country, [requisites] = @requisites WHERE ([producer_id] = @Original_producer_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="seller" ColumnName="seller" DataSourceName="praktika.dbo.producer" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@seller" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="seller" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="country" ColumnName="country" DataSourceName="praktika.dbo.producer" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="requisites" ColumnName="requisites" DataSourceName="praktika.dbo.producer" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@requisites" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="requisites" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_producer_id" ColumnName="producer_id" DataSourceName="praktika.dbo.producer" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_producer_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ТоварTableAdapter" GeneratorDataComponentClassName="ТоварTableAdapter" Name="Товар" UserDataComponentName="ТоварTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT product.product_id, product.product_name, price.summ, producer.seller
FROM     product LEFT OUTER JOIN
                  price ON price.price_id = product.price_id LEFT OUTER JOIN
                  producer ON producer.producer_id = product.producer_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="product_id" DataSetColumn="ID" />
              <Mapping SourceColumn="product_name" DataSetColumn="Название" />
              <Mapping SourceColumn="summ" DataSetColumn="Цена" />
              <Mapping SourceColumn="seller" DataSetColumn="Продавец" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[product] WHERE ([product_id] = @Original_product_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_product_id" ColumnName="product_id" DataSourceName="praktika.dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_product_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="product_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[product] ([product_name], [price_id], [producer_id]) VALUES (@product_name, @price_id, @producer_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="product_name" ColumnName="product_name" DataSourceName="praktika.dbo.product" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@product_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="product_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="price_id" ColumnName="price_id" DataSourceName="praktika.dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@price_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="producer_id" ColumnName="producer_id" DataSourceName="praktika.dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@producer_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[product] SET [product_name] = @product_name, [price_id] = @price_id, [producer_id] = @producer_id WHERE ([product_id] = @Original_product_id) 
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="product_name" ColumnName="product_name" DataSourceName="praktika.dbo.product" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@product_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="product_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="price_id" ColumnName="price_id" DataSourceName="praktika.dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@price_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="price_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="producer_id" ColumnName="producer_id" DataSourceName="praktika.dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@producer_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="producer_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_product_id" ColumnName="product_id" DataSourceName="praktika.dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_product_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="product_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ПраваTableAdapter" GeneratorDataComponentClassName="ПраваTableAdapter" Name="Права" UserDataComponentName="ПраваTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="praktika.dbo.rights" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[rights] WHERE (([rights_id] = @Original_rights_id) AND ([access_level] = @Original_access_level) AND ([rights_name] = @Original_rights_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rights_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_access_level" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="access_level" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_rights_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rights_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[rights] ([access_level], [rights_name]) VALUES (@access_level, @rights_name);
SELECT rights_id, access_level, rights_name FROM rights WHERE (rights_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@access_level" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="access_level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@rights_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rights_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT rights_id, access_level, rights_name FROM dbo.rights</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[rights] SET [access_level] = @access_level, [rights_name] = @rights_name WHERE (([rights_id] = @Original_rights_id) AND ([access_level] = @Original_access_level) AND ([rights_name] = @Original_rights_name));
SELECT rights_id, access_level, rights_name FROM rights WHERE (rights_id = @rights_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@access_level" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="access_level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@rights_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rights_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rights_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_access_level" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="access_level" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_rights_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rights_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="rights_id" ColumnName="rights_id" DataSourceName="praktika.dbo.rights" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rights_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="rights_id" DataSetColumn="ID" />
              <Mapping SourceColumn="access_level" DataSetColumn="Уровень доступа" />
              <Mapping SourceColumn="rights_name" DataSetColumn="Название" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[rights] WHERE ([rights_id] = @Original_rights_id)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_rights_id" ColumnName="rights_id" DataSourceName="praktika.dbo.rights" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_rights_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[rights] ([access_level], [rights_name]) VALUES (@access_level, @rights_name);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="access_level" ColumnName="access_level" DataSourceName="praktika.dbo.rights" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@access_level" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="access_level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="rights_name" ColumnName="rights_name" DataSourceName="praktika.dbo.rights" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@rights_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="rights_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[rights] SET [access_level] = @access_level, [rights_name] = @rights_name WHERE ([rights_id] = @Original_rights_id) 
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="access_level" ColumnName="access_level" DataSourceName="praktika.dbo.rights" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@access_level" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="access_level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="rights_name" ColumnName="rights_name" DataSourceName="praktika.dbo.rights" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@rights_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="rights_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_rights_id" ColumnName="rights_id" DataSourceName="praktika.dbo.rights" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_rights_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ПользовательTableAdapter" GeneratorDataComponentClassName="ПользовательTableAdapter" Name="Пользователь" UserDataComponentName="ПользовательTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT users.users_id, users.first_name, users.second_name, rights.rights_name, data_in.data_in_login
FROM     users LEFT OUTER JOIN
                  rights ON rights.rights_id = users.rights_id LEFT OUTER JOIN
                  data_in ON data_in.data_in_id = users.data_in_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="users_id" DataSetColumn="ID" />
              <Mapping SourceColumn="first_name" DataSetColumn="Имя" />
              <Mapping SourceColumn="second_name" DataSetColumn="Фамилия" />
              <Mapping SourceColumn="rights_name" DataSetColumn="Права" />
              <Mapping SourceColumn="data_in_login" DataSetColumn="Логин" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[users] WHERE ([users_id] = @Original_users_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_users_id" ColumnName="users_id" DataSourceName="praktika.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_users_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="users_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByID" GetMethodModifier="Public" GetMethodName="GetDataByID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByID" UserSourceName="GetDataByID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT users.users_id, users.first_name, users.second_name, rights.rights_name, data_in.data_in_login, users.rights_id
FROM     users LEFT OUTER JOIN
                  rights ON rights.rights_id = users.rights_id LEFT OUTER JOIN
                  data_in ON data_in.data_in_id = users.data_in_id
				  where users_id = @id
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="users_id" DataSourceName="praktika.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="users_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[users] ([rights_id], [data_in_id], [first_name], [second_name]) VALUES (@rights_id, @data_in_id, @first_name, @second_name);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="rights_id" ColumnName="rights_id" DataSourceName="praktika.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rights_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="data_in_id" ColumnName="data_in_id" DataSourceName="praktika.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="first_name" ColumnName="first_name" DataSourceName="praktika.dbo.users" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@first_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="second_name" ColumnName="second_name" DataSourceName="praktika.dbo.users" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@second_name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktikaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[users] SET [rights_id] = @rights_id, [data_in_id] = @data_in_id, [first_name] = @first_name, [second_name] = @second_name WHERE ([users_id] = @Original_users_id) @users_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rights_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@first_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@second_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_users_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rights_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rights_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_data_in_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="data_in_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_first_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_second_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="users_id" ColumnName="users_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@users_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="users_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="praktikaDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="praktikaDataSet1" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="praktikaDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Банк" msprop:Generator_RowClassName="БанкRow" msprop:Generator_RowEvHandlerName="БанкRowChangeEventHandler" msprop:Generator_RowDeletedName="БанкRowDeleted" msprop:Generator_RowDeletingName="БанкRowDeleting" msprop:Generator_RowEvArgName="БанкRowChangeEvent" msprop:Generator_TablePropName="Банк" msprop:Generator_RowChangedName="БанкRowChanged" msprop:Generator_UserTableName="Банк" msprop:Generator_RowChangingName="БанкRowChanging" msprop:Generator_TableClassName="БанкDataTable" msprop:Generator_TableVarName="tableБанк">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Название" msprop:Generator_UserColumnName="Название" msprop:Generator_ColumnPropNameInTable="НазваниеColumn" msprop:Generator_ColumnPropNameInRow="Название" msprop:Generator_ColumnVarNameInTable="columnНазвание">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Номер_x0020_счета" msprop:Generator_UserColumnName="Номер счета" msprop:Generator_ColumnPropNameInTable="Номер_счетаColumn" msprop:Generator_ColumnPropNameInRow="Номер_счета" msprop:Generator_ColumnVarNameInTable="columnНомер_счета">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Чек" msprop:Generator_RowClassName="ЧекRow" msprop:Generator_RowEvHandlerName="ЧекRowChangeEventHandler" msprop:Generator_RowDeletedName="ЧекRowDeleted" msprop:Generator_RowDeletingName="ЧекRowDeleting" msprop:Generator_RowEvArgName="ЧекRowChangeEvent" msprop:Generator_TablePropName="Чек" msprop:Generator_RowChangedName="ЧекRowChanged" msprop:Generator_UserTableName="Чек" msprop:Generator_RowChangingName="ЧекRowChanging" msprop:Generator_TableClassName="ЧекDataTable" msprop:Generator_TableVarName="tableЧек">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Покупатель" msdata:Caption="first_name" msprop:Generator_ColumnPropNameInRow="Покупатель" msprop:Generator_ColumnPropNameInTable="ПокупательColumn" msprop:Generator_ColumnVarNameInTable="columnПокупатель" msprop:Generator_UserColumnName="Покупатель" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Комиссия" msdata:Caption="comission_id" msprop:Generator_ColumnPropNameInRow="Комиссия" msprop:Generator_ColumnPropNameInTable="КомиссияColumn" msprop:Generator_ColumnVarNameInTable="columnКомиссия" msprop:Generator_UserColumnName="Комиссия" type="xs:int" minOccurs="0" />
              <xs:element name="Товар" msdata:Caption="product_name" msprop:Generator_ColumnPropNameInRow="Товар" msprop:Generator_ColumnPropNameInTable="ТоварColumn" msprop:Generator_ColumnVarNameInTable="columnТовар" msprop:Generator_UserColumnName="Товар" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Комиссия" msprop:Generator_RowClassName="КомиссияRow" msprop:Generator_RowEvHandlerName="КомиссияRowChangeEventHandler" msprop:Generator_RowDeletedName="КомиссияRowDeleted" msprop:Generator_RowDeletingName="КомиссияRowDeleting" msprop:Generator_RowEvArgName="КомиссияRowChangeEvent" msprop:Generator_TablePropName="Комиссия" msprop:Generator_RowChangedName="КомиссияRowChanged" msprop:Generator_UserTableName="Комиссия" msprop:Generator_RowChangingName="КомиссияRowChanging" msprop:Generator_TableClassName="КомиссияDataTable" msprop:Generator_TableVarName="tableКомиссия">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Комиссия" msprop:Generator_UserColumnName="Комиссия" msprop:Generator_ColumnPropNameInTable="КомиссияColumn" msprop:Generator_ColumnPropNameInRow="Комиссия" msprop:Generator_ColumnVarNameInTable="columnКомиссия" type="xs:int" />
              <xs:element name="Способ_x0020_оплаты" msdata:Caption="payment_method_name" msprop:Generator_ColumnPropNameInRow="Способ_оплаты" msprop:Generator_ColumnPropNameInTable="Способ_оплатыColumn" msprop:Generator_ColumnVarNameInTable="columnСпособ_оплаты" msprop:Generator_UserColumnName="Способ оплаты" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Входные_данные" msprop:Generator_RowClassName="Входные_данныеRow" msprop:Generator_RowEvHandlerName="Входные_данныеRowChangeEventHandler" msprop:Generator_RowDeletedName="Входные_данныеRowDeleted" msprop:Generator_RowDeletingName="Входные_данныеRowDeleting" msprop:Generator_RowEvArgName="Входные_данныеRowChangeEvent" msprop:Generator_TablePropName="Входные_данные" msprop:Generator_RowChangedName="Входные_данныеRowChanged" msprop:Generator_UserTableName="Входные_данные" msprop:Generator_RowChangingName="Входные_данныеRowChanging" msprop:Generator_TableClassName="Входные_данныеDataTable" msprop:Generator_TableVarName="tableВходные_данные">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Логин" msprop:Generator_UserColumnName="Логин" msprop:Generator_ColumnPropNameInTable="ЛогинColumn" msprop:Generator_ColumnPropNameInRow="Логин" msprop:Generator_ColumnVarNameInTable="columnЛогин">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Пароль" msprop:Generator_UserColumnName="Пароль" msprop:Generator_ColumnPropNameInTable="ПарольColumn" msprop:Generator_ColumnPropNameInRow="Пароль" msprop:Generator_ColumnVarNameInTable="columnПароль">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Оплата" msprop:Generator_RowClassName="ОплатаRow" msprop:Generator_RowEvHandlerName="ОплатаRowChangeEventHandler" msprop:Generator_RowDeletedName="ОплатаRowDeleted" msprop:Generator_RowDeletingName="ОплатаRowDeleting" msprop:Generator_RowEvArgName="ОплатаRowChangeEvent" msprop:Generator_TablePropName="Оплата" msprop:Generator_RowChangedName="ОплатаRowChanged" msprop:Generator_UserTableName="Оплата" msprop:Generator_RowChangingName="ОплатаRowChanging" msprop:Generator_TableClassName="ОплатаDataTable" msprop:Generator_TableVarName="tableОплата">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Банк" msdata:Caption="bank_name" msprop:Generator_ColumnPropNameInRow="Банк" msprop:Generator_ColumnPropNameInTable="БанкColumn" msprop:Generator_ColumnVarNameInTable="columnБанк" msprop:Generator_UserColumnName="Банк" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Комиссия" msdata:Caption="comission" msprop:Generator_ColumnPropNameInRow="Комиссия" msprop:Generator_ColumnPropNameInTable="КомиссияColumn" msprop:Generator_ColumnVarNameInTable="columnКомиссия" msprop:Generator_UserColumnName="Комиссия" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Способ_оплаты" msprop:Generator_RowClassName="Способ_оплатыRow" msprop:Generator_RowEvHandlerName="Способ_оплатыRowChangeEventHandler" msprop:Generator_RowDeletedName="Способ_оплатыRowDeleted" msprop:Generator_RowDeletingName="Способ_оплатыRowDeleting" msprop:Generator_RowEvArgName="Способ_оплатыRowChangeEvent" msprop:Generator_TablePropName="Способ_оплаты" msprop:Generator_RowChangedName="Способ_оплатыRowChanged" msprop:Generator_UserTableName="Способ_оплаты" msprop:Generator_RowChangingName="Способ_оплатыRowChanging" msprop:Generator_TableClassName="Способ_оплатыDataTable" msprop:Generator_TableVarName="tableСпособ_оплаты">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Название" msprop:Generator_UserColumnName="Название" msprop:Generator_ColumnPropNameInTable="НазваниеColumn" msprop:Generator_ColumnPropNameInRow="Название" msprop:Generator_ColumnVarNameInTable="columnНазвание">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Реквизиты" msprop:Generator_UserColumnName="Реквизиты" msprop:Generator_ColumnPropNameInTable="РеквизитыColumn" msprop:Generator_ColumnPropNameInRow="Реквизиты" msprop:Generator_ColumnVarNameInTable="columnРеквизиты">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Цена" msprop:Generator_RowClassName="ЦенаRow" msprop:Generator_RowEvHandlerName="ЦенаRowChangeEventHandler" msprop:Generator_RowDeletedName="ЦенаRowDeleted" msprop:Generator_RowDeletingName="ЦенаRowDeleting" msprop:Generator_RowEvArgName="ЦенаRowChangeEvent" msprop:Generator_TablePropName="Цена" msprop:Generator_RowChangedName="ЦенаRowChanged" msprop:Generator_UserTableName="Цена" msprop:Generator_RowChangingName="ЦенаRowChanging" msprop:Generator_TableClassName="ЦенаDataTable" msprop:Generator_TableVarName="tableЦена">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Сумма" msprop:Generator_UserColumnName="Сумма" msprop:Generator_ColumnPropNameInTable="СуммаColumn" msprop:Generator_ColumnPropNameInRow="Сумма" msprop:Generator_ColumnVarNameInTable="columnСумма" type="xs:int" />
              <xs:element name="Налог" msprop:Generator_UserColumnName="Налог" msprop:Generator_ColumnPropNameInTable="НалогColumn" msprop:Generator_ColumnPropNameInRow="Налог" msprop:Generator_ColumnVarNameInTable="columnНалог" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Производитель" msprop:Generator_RowClassName="ПроизводительRow" msprop:Generator_RowEvHandlerName="ПроизводительRowChangeEventHandler" msprop:Generator_RowDeletedName="ПроизводительRowDeleted" msprop:Generator_RowDeletingName="ПроизводительRowDeleting" msprop:Generator_RowEvArgName="ПроизводительRowChangeEvent" msprop:Generator_TablePropName="Производитель" msprop:Generator_RowChangedName="ПроизводительRowChanged" msprop:Generator_UserTableName="Производитель" msprop:Generator_RowChangingName="ПроизводительRowChanging" msprop:Generator_TableClassName="ПроизводительDataTable" msprop:Generator_TableVarName="tableПроизводитель">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Продавец" msprop:Generator_UserColumnName="Продавец" msprop:Generator_ColumnPropNameInTable="ПродавецColumn" msprop:Generator_ColumnPropNameInRow="Продавец" msprop:Generator_ColumnVarNameInTable="columnПродавец">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Страна" msprop:Generator_UserColumnName="Страна" msprop:Generator_ColumnPropNameInTable="СтранаColumn" msprop:Generator_ColumnPropNameInRow="Страна" msprop:Generator_ColumnVarNameInTable="columnСтрана">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Реквизиты" msprop:Generator_UserColumnName="Реквизиты" msprop:Generator_ColumnPropNameInTable="РеквизитыColumn" msprop:Generator_ColumnPropNameInRow="Реквизиты" msprop:Generator_ColumnVarNameInTable="columnРеквизиты">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Товар" msprop:Generator_RowClassName="ТоварRow" msprop:Generator_RowEvHandlerName="ТоварRowChangeEventHandler" msprop:Generator_RowDeletedName="ТоварRowDeleted" msprop:Generator_RowDeletingName="ТоварRowDeleting" msprop:Generator_RowEvArgName="ТоварRowChangeEvent" msprop:Generator_TablePropName="Товар" msprop:Generator_RowChangedName="ТоварRowChanged" msprop:Generator_UserTableName="Товар" msprop:Generator_RowChangingName="ТоварRowChanging" msprop:Generator_TableClassName="ТоварDataTable" msprop:Generator_TableVarName="tableТовар">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Название" msprop:Generator_UserColumnName="Название" msprop:Generator_ColumnPropNameInTable="НазваниеColumn" msprop:Generator_ColumnPropNameInRow="Название" msprop:Generator_ColumnVarNameInTable="columnНазвание">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Цена" msdata:Caption="summ" msprop:Generator_ColumnPropNameInRow="Цена" msprop:Generator_ColumnPropNameInTable="ЦенаColumn" msprop:Generator_ColumnVarNameInTable="columnЦена" msprop:Generator_UserColumnName="Цена" type="xs:int" minOccurs="0" />
              <xs:element name="Продавец" msdata:Caption="seller" msprop:Generator_ColumnPropNameInRow="Продавец" msprop:Generator_ColumnPropNameInTable="ПродавецColumn" msprop:Generator_ColumnVarNameInTable="columnПродавец" msprop:Generator_UserColumnName="Продавец" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Права" msprop:Generator_RowClassName="ПраваRow" msprop:Generator_RowEvHandlerName="ПраваRowChangeEventHandler" msprop:Generator_RowDeletedName="ПраваRowDeleted" msprop:Generator_RowDeletingName="ПраваRowDeleting" msprop:Generator_RowEvArgName="ПраваRowChangeEvent" msprop:Generator_TablePropName="Права" msprop:Generator_RowChangedName="ПраваRowChanged" msprop:Generator_UserTableName="Права" msprop:Generator_RowChangingName="ПраваRowChanging" msprop:Generator_TableClassName="ПраваDataTable" msprop:Generator_TableVarName="tableПрава">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Уровень_x0020_доступа" msprop:Generator_UserColumnName="Уровень доступа" msprop:Generator_ColumnPropNameInTable="Уровень_доступаColumn" msprop:Generator_ColumnPropNameInRow="Уровень_доступа" msprop:Generator_ColumnVarNameInTable="columnУровень_доступа">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Название" msprop:Generator_UserColumnName="Название" msprop:Generator_ColumnPropNameInTable="НазваниеColumn" msprop:Generator_ColumnPropNameInRow="Название" msprop:Generator_ColumnVarNameInTable="columnНазвание">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Пользователь" msprop:Generator_RowClassName="ПользовательRow" msprop:Generator_RowEvHandlerName="ПользовательRowChangeEventHandler" msprop:Generator_RowDeletedName="ПользовательRowDeleted" msprop:Generator_RowDeletingName="ПользовательRowDeleting" msprop:Generator_RowEvArgName="ПользовательRowChangeEvent" msprop:Generator_TablePropName="Пользователь" msprop:Generator_RowChangedName="ПользовательRowChanged" msprop:Generator_UserTableName="Пользователь" msprop:Generator_RowChangingName="ПользовательRowChanging" msprop:Generator_TableClassName="ПользовательDataTable" msprop:Generator_TableVarName="tableПользователь">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Имя" msprop:Generator_UserColumnName="Имя" msprop:Generator_ColumnPropNameInTable="ИмяColumn" msprop:Generator_ColumnPropNameInRow="Имя" msprop:Generator_ColumnVarNameInTable="columnИмя">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Фамилия" msprop:Generator_UserColumnName="Фамилия" msprop:Generator_ColumnPropNameInTable="ФамилияColumn" msprop:Generator_ColumnPropNameInRow="Фамилия" msprop:Generator_ColumnVarNameInTable="columnФамилия">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Права" msdata:Caption="rights_name" msprop:Generator_ColumnPropNameInRow="Права" msprop:Generator_ColumnPropNameInTable="ПраваColumn" msprop:Generator_ColumnVarNameInTable="columnПрава" msprop:Generator_UserColumnName="Права" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Логин" msdata:Caption="data_in_login" msprop:Generator_ColumnPropNameInRow="Логин" msprop:Generator_ColumnPropNameInTable="ЛогинColumn" msprop:Generator_ColumnVarNameInTable="columnЛогин" msprop:Generator_UserColumnName="Логин" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Банк" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Чек_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Чек" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Комиссия_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Комиссия" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Входные_данные_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Входные_данные" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Оплата_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Оплата" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Способ_оплаты_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Способ_оплаты" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Цена_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Цена" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Производитель_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Производитель" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Товар_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Товар" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Права_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Права" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Пользователь_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Пользователь" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>